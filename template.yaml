AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  backend-aiit-campus-voice

  Sample SAM Template for backend-aiit-campus-voice

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  HealthFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: app.controller.health_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        Health:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /health
            Method: get
  SubjectFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: app.controller.subject_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        Subject:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /subjects
            Method: get
  SubjectTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SubjectTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  DynamoDBAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DynamoDBAccessPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:Scan
              - dynamodb:Query
            Resource: !GetAtt SubjectTable.Arn
      Roles:
        - !Ref HealthFunctionRole
        - !Ref SubjectFunctionRole
            
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HealthApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/health/"
  HealthFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HealthFunction.Arn
  HealthFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HealthFunctionRole.Arn
  SubjectApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/subjects?q=subject_name"
  SubjectFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt SubjectFunction.Arn
  SubjectFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt SubjectFunctionRole.Arn
  SubjectTable:
    Description: "SubjectTable DynamoDB Table ARN"
    Value: !GetAtt SubjectTable.Arn